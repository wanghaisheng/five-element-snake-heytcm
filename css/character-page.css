:root {
  /* Inherit main color variables from styles.css */
  --card-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  --card-border-radius: 12px;
  --card-transition: all 0.3s ease;
}

.character-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 6rem 2rem;
}

.character-header {
  text-align: center;
  margin-bottom: 4rem;
}

.character-header h1 {
  font-size: var(--font-size-title);
  color: var(--color-primary);
  margin-bottom: 1rem;
}

.character-header p {
  font-size: var(--font-size-large);
  color: var(--color-text-light);
  max-width: 800px;
  margin: 0 auto;
}

.character-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 2rem;
  margin-bottom: 4rem;
}

.character-card {
  background-color: white;
  border-radius: var(--card-border-radius);
  overflow: hidden;
  box-shadow: var(--card-shadow);
  transition: var(--card-transition);
  cursor: pointer;
  position: relative;
}

.character-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
}

.character-image {
  width: 100%;
  height: 200px;
  overflow: hidden;
  position: relative;
}

.character-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.character-card:hover .character-image img {
  transform: scale(1.1);
}

.character-element {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  color: white;
  font-size: 1.2rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.element-gold {
  background-color: var(--color-gold);
}

.element-wood {
  background-color: var(--color-green);
}

.element-water {
  background-color: var(--color-blue);
}

.element-fire {
  background-color: var(--color-red);
}

.element-earth {
  background-color: var(--color-brown);
}

.character-info {
  padding: 1.5rem;
}

.character-info h3 {
  font-size: var(--font-size-large);
  margin-bottom: 0.5rem;
  color: var(--color-text);
}

.character-info p {
  color: var(--color-text-light);
  margin-bottom: 1rem;
  font-size: var(--font-size);
}

.character-details {
  padding: 0 2rem 2rem;
}

.character-details h2 {
  font-size: var(--font-size-xlarge);
  color: var(--color-primary);
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  border-bottom: 2px solid var(--color-primary);
}

.character-details .subtitle {
  font-size: var(--font-size-large);
  color: var(--color-secondary);
  margin-bottom: 1.5rem;
  font-style: italic;
}

.character-details p {
  margin-bottom: 1.5rem;
  line-height: 1.8;
}

.character-details .section-title {
  font-size: var(--font-size-large);
  color: var(--color-primary);
  margin: 2rem 0 1rem;
}

.ability-list {
  list-style: none;
  padding-left: 1.5rem;
}

.ability-list li {
  margin-bottom: 1rem;
  position: relative;
  padding-left: 1.5rem;
}

.ability-list li:before {
  content: '';
  position: absolute;
  left: 0;
  top: 0.6rem;
  width: 0.5rem;
  height: 0.5rem;
  background: var(--color-primary);
  border-radius: 50%;
}

.ability-name {
  font-weight: bold;
  color: var(--color-text);
}

.character-evolution {
  margin: 2rem 0;
  padding: 1.5rem;
  background-color: var(--color-background-dark);
  border-radius: var(--size-radius);
}

.evolution-stages {
  display: flex;
  justify-content: space-between;
  margin-top: 1.5rem;
}

.evolution-stage {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  flex: 1;
}

.evolution-icon {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 0.5rem;
  font-size: 1.5rem;
  color: white;
}

.evolution-name {
  font-weight: bold;
  font-size: var(--font-size);
  margin-bottom: 0.25rem;
}

.evolution-desc {
  font-size: var(--font-size-small);
  color: var(--color-text-light);
}

.arrow-right {
  display: flex;
  align-items: center;
  color: var(--color-text-light);
  font-size: 1.5rem;
}

@media (max-width: 768px) {
  .character-grid {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  }
  
  .evolution-stages {
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .arrow-right {
    transform: rotate(90deg);
    margin: 1rem 0;
  }
}